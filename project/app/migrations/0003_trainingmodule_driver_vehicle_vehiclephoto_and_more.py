# Generated by Django 5.2.1 on 2025-06-12 17:05

import app.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0002_ride'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TrainingModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('duration_minutes', models.IntegerField()),
                ('is_mandatory', models.BooleanField(default=True)),
                ('order', models.IntegerField(default=0)),
                ('content_url', models.URLField(blank=True)),
                ('quiz_questions', models.JSONField(blank=True, default=list)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=20)),
                ('license_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('license_expiry', models.DateField(blank=True, null=True)),
                ('application_status', models.CharField(choices=[('started', 'Application Started'), ('documents_uploaded', 'Documents Uploaded'), ('background_check_pending', 'Background Check Pending'), ('training_in_progress', 'Training In Progress'), ('assessment_scheduled', 'Assessment Scheduled'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('suspended', 'Suspended')], default='started', max_length=30)),
                ('background_check_status', models.CharField(default='pending', max_length=20)),
                ('background_check_date', models.DateField(blank=True, null=True)),
                ('background_check_consent', models.BooleanField(default=False)),
                ('years_driving', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(50)])),
                ('previous_platforms', models.JSONField(blank=True, default=list)),
                ('disability_experience', models.CharField(choices=[('none', 'No Experience'), ('some', 'Some Experience'), ('experienced', 'Very Experienced')], default='none', max_length=20)),
                ('languages', models.JSONField(blank=True, default=list)),
                ('working_hours', models.JSONField(blank=True, default=list)),
                ('working_days', models.JSONField(blank=True, default=list)),
                ('expected_trips_per_week', models.IntegerField(default=20, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('rating', models.DecimalField(decimal_places=2, default=5.0, max_digits=3)),
                ('total_rides', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=False)),
                ('is_available', models.BooleanField(default=False)),
                ('current_location', models.JSONField(blank=True, null=True)),
                ('accessibility_training', models.JSONField(blank=True, default=list)),
                ('training_completed', models.BooleanField(default=False)),
                ('assessment_passed', models.BooleanField(default=False)),
                ('has_portuguese_license', models.BooleanField(default=False)),
                ('has_accessible_vehicle', models.BooleanField(default=False)),
                ('authorized_to_work', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_plate', models.CharField(max_length=20, unique=True)),
                ('make', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1990), django.core.validators.MaxValueValidator(2030)])),
                ('color', models.CharField(choices=[('white', 'White'), ('black', 'Black'), ('silver', 'Silver'), ('gray', 'Gray'), ('blue', 'Blue'), ('red', 'Red'), ('green', 'Green'), ('yellow', 'Yellow'), ('other', 'Other')], max_length=20)),
                ('vehicle_type', models.CharField(choices=[('sedan_accessible', 'Accessible Sedan'), ('van_ramp', 'Van with Ramp'), ('van_lift', 'Van with Lift'), ('suv_accessible', 'Accessible SUV'), ('other', 'Other')], max_length=20)),
                ('wheelchair_capacity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('has_ramp', models.BooleanField(default=False)),
                ('has_lift', models.BooleanField(default=False)),
                ('has_lowered_floor', models.BooleanField(default=False)),
                ('has_swivel_seats', models.BooleanField(default=False)),
                ('has_hand_controls', models.BooleanField(default=False)),
                ('door_width_cm', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(200)])),
                ('extra_features', models.JSONField(blank=True, default=list)),
                ('insurance_expiry', models.DateField()),
                ('inspection_expiry', models.DateField()),
                ('safety_equipment', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('verification_status', models.CharField(default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='app.driver')),
            ],
        ),
        migrations.CreateModel(
            name='VehiclePhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_type', models.CharField(choices=[('exterior_front', 'Exterior Front'), ('exterior_back', 'Exterior Back'), ('exterior_left', 'Exterior Left'), ('exterior_right', 'Exterior Right'), ('interior_dashboard', 'Interior Dashboard'), ('interior_seats', 'Interior Seats'), ('accessibility_ramp', 'Ramp/Lift'), ('wheelchair_area', 'Wheelchair Area'), ('securing_points', 'Wheelchair Securing Points')], max_length=30)),
                ('image', models.ImageField(upload_to=app.models.vehicle_photo_upload_path)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='app.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='DriverDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('driving_license_front', 'Driving License Front'), ('driving_license_back', 'Driving License Back'), ('citizen_card', 'Citizen Card'), ('passport', 'Passport'), ('proof_of_address', 'Proof of Address')], max_length=30)),
                ('file', models.FileField(upload_to=app.models.driver_document_upload_path)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('verified', models.BooleanField(default=False)),
                ('verification_notes', models.TextField(blank=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='app.driver')),
            ],
            options={
                'unique_together': {('driver', 'document_type')},
            },
        ),
        migrations.CreateModel(
            name='DriverTraining',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('quiz_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('attempts', models.IntegerField(default=0)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_progress', to='app.driver')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.trainingmodule')),
            ],
            options={
                'unique_together': {('driver', 'module')},
            },
        ),
        migrations.CreateModel(
            name='VehicleDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('registration', 'Vehicle Registration (DUA)'), ('insurance', 'Insurance Certificate'), ('inspection', 'Inspection Certificate (IPO)'), ('accessibility_cert', 'Accessibility Certification')], max_length=30)),
                ('file', models.FileField(upload_to=app.models.driver_document_upload_path)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('verified', models.BooleanField(default=False)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='app.vehicle')),
            ],
            options={
                'unique_together': {('vehicle', 'document_type')},
            },
        ),
    ]
